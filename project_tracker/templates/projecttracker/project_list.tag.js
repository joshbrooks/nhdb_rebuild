// Generated by CoffeeScript 1.10.0
(function() {
  var self, sr;

  window.project_list_tag = this;

  self = this;

  self.pagesize = 20;

  self.page = 1;

  self.query = {};

  self.on('mount', function() {
    self.message = "Projects";
    self.projects = [];
    return RiotControl.on('projects_changed', function(projects) {
      self.projects = projects;
      return self.update();
    });
  });

  RiotControl.on('load_projects', function(query) {
    self.query = query;
    $('project-list').show();
    return $('project-detail').hide();
  });

  self.paginate = function(projects) {
    var from, r, to;
    from = self.page * self.pagesize;
    to = from + self.pagesize;
    r = projects.slice(from, to);
    return r;
  };

  self.filter = function(projects) {
    if (self.query.text) {
      projects.filter(function(project) {
        return project.name.toUpperCase().indexOf(self.query.text.toUpperCase()) !== -1;
      });
    }
    if (self.query.status) {
      console.log(self.query.status);
      projects = projects.filter(function(project) {
        if (project.status.toUpperCase() === self.query.status.toUpperCase()) {
          return true;
        }
      });
      console.log(projects.length);
    }
    return projects;
  };

  self.set_page = function(e) {
    self.page = parseInt($(e.target).attr('data-set-page'));
    return self.update();
  };

  self.project_detail = function(e) {
    riot.route("/project/by-id/" + e.item.id);
    return RiotControl.trigger('load_project_detail', e.item);
  };

  sr = riot.route.create();

  sr('/project..', function() {
    return RiotControl.trigger('load_projects', riot.route.query());
  });

  sr('/project/by-id/*', function(project_id) {});

  self.trans = function(translation_id) {
    return translationstore.strings[translation_id].translation['name_tet'];
  };

}).call(this);

//# sourceMappingURL=project_list.tag.js.map
