# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-08 15:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExcelDownloadFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('organization', models.CharField(max_length=150, verbose_name='organization')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('purpose', models.CharField(choices=[('PP', 'Project planning'), ('RE', 'Research'), ('IN', 'Personal interest'), ('OT', 'Other (please specify)')], max_length=2)),
                ('purposeother', models.CharField(blank=True, max_length=150, null=True, verbose_name='Other purpose')),
                ('referralurl', models.CharField(blank=True, max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('acronym', models.CharField(blank=True, max_length=50, null=True, verbose_name='acronym')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('type', models.CharField(blank=True, choices=[('LNGO', 'Local NGO'), ('INGO', 'International NGO'), ('CBO', 'Community-Based Organization'), ('GOV', 'Government (RDTL)'), ('IGOV', 'Government (overseas)'), ('UN', 'United Nations'), ('AC', 'Academic / Research Institute'), ('BI', 'Bilateral Agency')], default='LNGO', max_length=10, null=True, verbose_name='Organization Type')),
                ('active', models.BooleanField(default=True)),
                ('fulltimestaff', models.IntegerField(blank=True, null=True, verbose_name='Full time staff')),
                ('parttimestaff', models.IntegerField(blank=True, null=True, verbose_name='Part time staff')),
                ('modified', models.DateField(auto_now=True, null=True)),
                ('verified', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationPlace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('suco', models.CharField(blank=True, max_length=256, null=True)),
                ('subdistrict', models.CharField(blank=True, max_length=256, null=True)),
                ('district', models.CharField(blank=True, max_length=256, null=True)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project_tracker.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('modified', models.DateField(auto_now=True, null=True)),
                ('verified', models.DateField(blank=True, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project_tracker.Organization')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('startdate', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('enddate', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('verified', models.DateField(blank=True, null=True)),
                ('modified', models.DateField(auto_now=True, null=True)),
                ('fulltimestaff', models.IntegerField(blank=True, null=True, verbose_name='Full time staff')),
                ('parttimestaff', models.IntegerField(blank=True, null=True, verbose_name='Part time staff')),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('C', 'Cancelled'), ('P', 'Planned')], default='A', max_length=1, verbose_name='ProjectStatus')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectOrganization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('projectorganization', models.CharField(choices=[('P', 'Primary organization'), ('S', 'Secondary organization'), ('F', 'Funding organization'), ('O', 'Other')], max_length=1)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes about this relationship')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project_tracker.Organization')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_tracker.Project')),
            ],
            options={
                'verbose_name': 'Project to Organization link',
            },
        ),
        migrations.CreateModel(
            name='ProjectPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('relationship', models.CharField(choices=[('P', 'Primary contact'), ('-', '')], max_length=1)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_tracker.Person')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_tracker.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPlace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('pcode', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project_tracker.Project')),
            ],
        ),
        migrations.CreateModel(
            name='RecordOwner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='organization',
            field=models.ManyToManyField(blank=True, through='project_tracker.ProjectOrganization', to='project_tracker.Organization'),
        ),
        migrations.AddField(
            model_name='project',
            name='person',
            field=models.ManyToManyField(blank=True, through='project_tracker.ProjectPerson', to='project_tracker.Person'),
        ),
        migrations.AddField(
            model_name='project',
            name='place',
            field=models.ManyToManyField(blank=True, related_name='locations', to='project_tracker.ProjectPlace'),
        ),
        migrations.AlterUniqueTogether(
            name='projectplace',
            unique_together=set([('project', 'pcode')]),
        ),
        migrations.AlterUniqueTogether(
            name='projectperson',
            unique_together=set([('person', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='projectorganization',
            unique_together=set([('project', 'organization')]),
        ),
    ]
